Index: django/contrib/sitemaps/__init__.py
===================================================================
--- django/contrib/sitemaps/__init__.py	(revision 10689)
+++ django/contrib/sitemaps/__init__.py	(working copy)
@@ -1,4 +1,5 @@
 from django.core import urlresolvers, paginator
+from django.conf import settings
 import urllib
 
 PING_URL = "http://www.google.com/webmasters/tools/ping"
@@ -27,9 +28,13 @@
     if sitemap_url is None:
         raise SitemapNotFound("You didn't provide a sitemap_url, and the sitemap URL couldn't be auto-detected.")
 
-    from django.contrib.sites.models import Site
-    current_site = Site.objects.get_current()
-    url = "http://%s%s" % (current_site.domain, sitemap_url)
+    if 'DOMAIN' in settings.get_all_members():
+        domain = settings.DOMAIN
+    else:
+        from django.contrib.sites.models import Site
+        current_site = Site.objects.get_current()
+        domain = current_site.domain
+    url = "http://%s%s" % (domain, sitemap_url)
     params = urllib.urlencode({'sitemap':url})
     urllib.urlopen("%s?%s" % (ping_url, params))
 
@@ -60,11 +65,15 @@
     paginator = property(_get_paginator)
 
     def get_urls(self, page=1):
-        from django.contrib.sites.models import Site
-        current_site = Site.objects.get_current()
+        if 'DOMAIN' in settings.get_all_members():
+            domain = settings.DOMAIN
+        else:
+            from django.contrib.sites.models import Site
+            current_site = Site.objects.get_current()
+            domain = current_site.domain
         urls = []
         for item in self.paginator.page(page).object_list:
-            loc = "http://%s%s" % (current_site.domain, self.__get('location', item))
+            loc = "http://%s%s" % (domain, self.__get('location', item))
             url_info = {
                 'location':   loc,
                 'lastmod':    self.__get('lastmod', item, None),
